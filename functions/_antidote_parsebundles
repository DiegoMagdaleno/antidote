#!/usr/bin/env zsh

emulate -L zsh
setopt local_options extended_glob

local instructions=()
if [[ $# -gt 0 ]]; then
  # handle bundle instructions as a param string
  # split on newlines
  instructions=("${(s.\n.)${@}}")
elif [[ ! -t 0 ]]; then
  # handle both <redirected or piped| input
  local data
  while IFS= read -r data || [[ -n "$data" ]]; do
    instructions+=($data)
  done
fi

# if stdin containts no data and no params were passed there's nothing to do
if [[ $#instructions -eq 0 ]]; then
  return 1
fi

local inst bundle parts optstr
typeset -A bundle
for inst in $instructions; do
  # turn whitespace into spaces
  inst=${inst//$'\t'/ }
  inst=${inst//$'\r'/ }

  # remove comments
  inst=${inst%%\#*}

  # split instruction on spaces into parts array
  parts=(${(@s: :)inst})

  # skip empty lines
  [[ $#parts -gt 0 ]] || continue

  # the first element is the repo, the remaining are a:b annotations
  # split annotations into key/value pairs
  bundle=()
  bundle[repo]=$parts[1]
  optstr=(${parts[@]:1})
  if [[ $#optstr -gt 0 ]]; then
    parts=(${(@s/:/)optstr})
    if [[ $(( $#parts % 2 )) -ne 0 ]]; then
      echo >&2 "antidote: bad annotation '$optstr'."
      return 1
    fi
    bundle+=($parts)
  fi
  bundle[kind]=${bundle[kind]:-zsh}

  # output the parsed associative array
  typeset -p bundle
done
