#!/usr/bin/env zsh

setopt local_options no_notify no_monitor

local zsh_bundles=()
if [[ ! -t 0 ]]; then
  # handle both <redirected or piped| input
  while read -r data; do
    # skip comments
    [[ $data != \#* ]] && [[ -n $data ]] || continue
    zsh_bundles+=($data)
  done
elif [[ $# -gt 0 ]]; then
  zsh_bundles=("$*")
else
  # if stdin containts no data and no params were passed there's nothing to do
  return 1
fi

# clone the requested bundles in the background
_antidote_cloneall $zsh_bundles &
wait

# generate bundle load script
local bundlestr parts bundle optstr opts
typeset -A opts
local prescript=() script=()

for bundlestr in $zsh_bundles; do
  parts=(${(@s/ /)bundlestr})
  bundle=$parts[1]
  optstr=(${parts[@]:1})
  opts=(${(@s/:/)optstr})
  opts[kind]=${opts[kind]:-zsh}

  if [[ $opts[kind] = defer ]] && [[ $#prescript -eq 0 ]]; then
    _antidote_clone romkatv/zsh-defer
    prescript=("$(_antidote_script romkatv/zsh-defer)")
  fi

  # nothing to do for clone-only bundles
  [[ $opts[kind] != clone ]] || continue

  script+="$(_antidote_script $bundle $opts[kind] $opts[path])"
done

(( ! $#prescript )) || printf "%s\n" "${prescript[@]}"
printf "%s\n" "${script[@]}"
